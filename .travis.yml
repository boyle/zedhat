language: c
sudo: required
dist: trusty

os:
   - linux
#   - osx

compiler:
   - gcc
   - clang

before_install:
   - eval "${MATRIX_EVAL}"
   - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
   - pip install --user cpp-coveralls
#   - if [[ "x$TRAVIS_OS_NAME" == "xosx" ]]; then brew update; brew install homebrew/science/openblas; brew install  homebrew/science/suite-sparse; pushd /usr/include; sudo ln -s $(find . -name cblas.h); popd; fi
# missing lapacke... no homebrew to tap

addons:
   apt:
      packages:
         - gfortran
         - libblas-dev
         - libopenblas-dev
         - libopenblas-base
         - libsuitesparse-dev
         - liblapacke
         - liblapacke-dev
         - libmatio-dev
         - libmatio2
         - lcov
   coverity_scan:
      project:
         name: "boyle/zedhat"
         description: "<Your project description here>"
      notification_email: alistair.js.boyle@gmail.com
      build_command_prepend: "./autogen && ./configure"
      build_command: "make"
      branch_pattern: coverity_scan

#        - gcc-6
script:
   - ./autogen
   - ./configure
   - make check
   - if [[ "$CC" == "gcc" ]]; then make cov; fi

after_failure:
   - awk '/## Summary of the failures. ##/{flag=1;next}/## config.log ##/{flag=0}flag' ${TRAVIS_BUILD_DIR}/*/testsuite.log
#  - cat ${TRAVIS_BUILD_DIR}/*/testsuite.log


after_success:
   - if [[ "$CC" == "gcc" ]]; then coveralls --exclude tests --gcov-options '\-lp'; fi

env:
   global:
      # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
      #   via the "travis encrypt" command using the project repo's public key
      - secure: "Mm/jdsPpEItqiTbK0KX9KNE1JuL6HJmpbanPV25pYmJNwQVWwCqp1sexk8Fwge2DSpFM9UPSwuqRdrxOfhw7YCFZT+rQ3BaezivSCm4NC3eNswRxWWjCGeYSKqNwIElu7SHZgPXRWmVK9EvmaNmSuJ7HA2xgzmxT46cgT1lwrE7YTFAE1AL/+WKCyh6cCLvUDzm8z6G8ZpRS6X+DEEBfORH4V1zU8wax3G796mvJwYXaPimsNPDm/0tQWG+fduk27ZWkSMoilzyosYEsEBo/lTAqpB1vXK5+KB5y/zZ4STST5EcHBLIgLV/ojXL+rZcNedRrtetFlHq1qxSW1skFrYKBRly3ZuQ7guvznH2fJmucYaM54cJVravpqIfdWwYyLUOe+lWKyPgpyzNSnpAZvoT97bD6kHgT8S54qk8uYTGeGcIL3m38lyy/Xqnt8f+Pr1JHTI7A5tdnNL1GXqP5hzLik/lnoq/SgH2wBF1ljzwB9FxpjhZNzoyrxgIQ54nmo6Mq2WigxzdMaaRJH8GYsUN+B1Xv8ZuHq79kvEQyL/MSbRzLIChsEWQUhNkSmfnzSAElhjaAG3xQqpyv1tHyKuABflBUjuhw46bLnxOEjpxuyrWDXqXBvESu5RZpWV/P11CPhW9eptZ0/7d0eN/1t9dEe7v03GNFTFYcJk5CZxA="
