AT_INIT()
AT_COPYRIGHT([Copyright 2016-2017, Alistair Boyle, 3-clause BSD License])
AT_COLOR_TESTS

AT_TESTED(AT_PACKAGE_NAME)
m4_define(ZH_DATA_FILE_TESTA_MAT,
  [AT_DATA([testa.mat-xxd],m4_esyscmd(xxd -p tests/testa.mat))]
  xxd -r -p testa.mat-xxd > testa.mat
dnl  diff testa.mat ../../../tests/testa.mat
)
m4_define(ZH_DATA_FILE_TESTB_MAT,
  [AT_DATA([testb.mat-xxd],m4_esyscmd(xxd -p tests/testb.mat))]
  xxd -r -p testb.mat-xxd > testb.mat
dnl  diff testb.mat ../../../tests/testb.mat
)
m4_define(ZH_DATA_FILE_TESTAB_MAT,
  [AT_DATA([testab.mat-xxd],m4_esyscmd(xxd -p tests/testab.mat))]
  xxd -r -p testab.mat-xxd > testab.mat
dnl  diff testab.mat ../../../tests/testab.mat
)
m4_define(ZH_DATA_FILE_MATA,[      Name: a
      Rank: 2
Dimensions: 2 x 3
Class Type: Double Precision Array
 Data Type: IEEE 754 double-precision
{
1 2 3
4 5 6
}])
m4_define(ZH_DATA_FILE_MATB,[      Name: b
      Rank: 2
Dimensions: 2 x 3
Class Type: Sparse Array
 Data Type: IEEE 754 double-precision
{
    (1,1)  1
    (1,2)  2
    (2,2)  5
}])

m4_define(ZH_DATA_FILE_TESTAXB_MAT,
  [AT_DATA([testAXB-v73.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v73.mat))]
  [AT_DATA([testAXB-v7.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v7.mat))]
  [AT_DATA([testAXB-v6.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v6.mat))]
  [AT_DATA([testAXB-v4.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v4.mat))]
  xxd -r -p testAXB-v73.mat-xxd >testAXB-v73.mat
  xxd -r -p testAXB-v7.mat-xxd > testAXB-v7.mat
  xxd -r -p testAXB-v6.mat-xxd > testAXB-v6.mat
  xxd -r -p testAXB-v4.mat-xxd > testAXB-v4.mat
)

m4_define(ZH_HELP_SHORT, [AT_PACKAGE_NAME @<:@options@:>@])
m4_define(ZH_HELP_LONG,
[ZH_HELP_SHORT
 --help -h     this help
 --version -V  version info
 --tolerance --tol -t <#.##e#>
               for checking --fwd
 --forward-solver --fwd -f <file.mat>
               solves X=A\B and A X = B
               with A B and X from file.mat
])

AT_BANNER([libs])
AT_SETUP([cblas])
AT_KEYWORDS([cblas libs])
AT_CHECK([libcblas_dgemm],0,ignore)
AT_CLEANUP

AT_SETUP([lapacke])
AT_KEYWORDS([lapacke libs])
AT_CHECK([liblapacke_dgels],0,ignore)
AT_CLEANUP

AT_SETUP([umfpack])
AT_KEYWORDS([umfpack libs])
AT_CHECK([libumfpack],0,ignore)
AT_CLEANUP

AT_SETUP([cholmod])
AT_KEYWORDS([cholmod libs])
AT_CHECK([libcholmod],0,ignore)
AT_CLEANUP

AT_SETUP([matio])
AT_KEYWORDS([matio libs])

dnl TODO we *should* be able to reproduce the matlab .mat exactly but it
dnl currently comes out differently... so we just check that the output is
dnl stable and we didn't lose any data
ZH_DATA_FILE_TESTA_MAT
AT_CHECK([libmatio testa.mat out.mat | sed 's/ $//'],0,[hello]
ZH_DATA_FILE_MATA
goodbye
)
AT_CHECK([libmatio out.mat out2.mat | sed 's/ $//' && diff out.mat out2.mat],0,[hello]
ZH_DATA_FILE_MATA
goodbye
)

ZH_DATA_FILE_TESTB_MAT
AT_CHECK([libmatio testb.mat out.mat | sed 's/ $//'],0,[hello]
ZH_DATA_FILE_MATB
goodbye
)
AT_CHECK([libmatio out.mat out2.mat | sed 's/ $//' && diff out.mat out2.mat],0,[hello]
ZH_DATA_FILE_MATB
goodbye
)

ZH_DATA_FILE_TESTAB_MAT
AT_CHECK([libmatio testab.mat out.mat | sed 's/ $//'],0,[hello]
ZH_DATA_FILE_MATA
ZH_DATA_FILE_MATB
goodbye
)
AT_CHECK([libmatio out.mat out2.mat | sed 's/ $//' && diff out.mat out2.mat],0,[hello]
ZH_DATA_FILE_MATA
ZH_DATA_FILE_MATB
goodbye
)
AT_CLEANUP

AT_BANNER([args])
AT_SETUP([badargs])
AT_KEYWORDS([badargs args install])
AT_CHECK(AT_PACKAGE_NAME,1,ignore,ignore)
AT_CHECK(AT_PACKAGE_NAME asdf asdf,1,ignore,ignore)
AT_CHECK(AT_PACKAGE_NAME --unhandled-arg,1,ignore,ignore)
AT_CHECK(AT_PACKAGE_NAME asdf,1,ignore,ignore) dnl test: bad config file
AT_CLEANUP

AT_SETUP([--help])
AT_KEYWORDS([help args install])
AT_CHECK(AT_PACKAGE_NAME --help,0,ZH_HELP_LONG)
AT_CHECK(AT_PACKAGE_NAME -h,0,ZH_HELP_LONG)
AT_CHECK(AT_PACKAGE_NAME -?,1,ZH_HELP_LONG)
AT_CLEANUP

AT_SETUP(--version)
AT_KEYWORDS([version args install])
AT_CHECK(AT_PACKAGE_NAME --version,0,AT_PACKAGE_NAME[ ]AT_PACKAGE_VERSION[
])
AT_CHECK(AT_PACKAGE_NAME -V,0,AT_PACKAGE_NAME[ ]AT_PACKAGE_VERSION[
])
AT_CLEANUP

AT_SETUP(--tolerance)
AT_KEYWORDS([tolerance args install])
AT_CHECK(AT_PACKAGE_NAME --tolerance,1,ZH_HELP_LONG,AT_PACKAGE_NAME[: option '--tolerance' requires an argument
])
AT_CHECK(AT_PACKAGE_NAME -t,1,ZH_HELP_LONG,AT_PACKAGE_NAME[: option requires an argument -- 't'
])
AT_CHECK(AT_PACKAGE_NAME -t asdf,1,ZH_HELP_LONG,[error: --tolerance asdf: not a number
])
AT_CHECK(AT_PACKAGE_NAME -t -10,1,ZH_HELP_LONG,[error: --tolerance -10: must be non-negative
])
AT_CHECK(AT_PACKAGE_NAME -t 10,0,,)
AT_CHECK(AT_PACKAGE_NAME -t +10,0,,)
AT_CHECK(AT_PACKAGE_NAME -t 10e-100,0,,)
AT_CHECK(AT_PACKAGE_NAME -t 10e+100,0,,)
AT_CHECK(AT_PACKAGE_NAME -t 1.04e-100,0,,)
AT_CHECK(AT_PACKAGE_NAME -t 1.04e+100,0,,)
AT_CLEANUP

AT_SETUP(--forward-solver)
AT_KEYWORDS([fwd args install])
m4_define(ZH_FWD_OUTPUT,[fwd: || A\B - X ||_2 == || A X - B ||_2
m4_if($2,0,[pass],[fwd A: ret = $2 ($1)
fwd B: ret = $2 ($1)
fwd X: ret = $2 ($1)])
])
m4_define(ZH_FWD_AXB_PASS,ZH_FWD_OUTPUT(testAXB-[$1].mat,0))
ZH_DATA_FILE_TESTA_MAT
ZH_DATA_FILE_TESTAB_MAT
ZH_DATA_FILE_TESTAXB_MAT
AT_CHECK(AT_PACKAGE_NAME --forward-solver testab.mat,1,[ZH_FWD_OUTPUT(testab.mat,3)],)
AT_CHECK(AT_PACKAGE_NAME --fwd testab.mat,1,[ZH_FWD_OUTPUT(testab.mat,3)],)
AT_CHECK(AT_PACKAGE_NAME -f testab.mat,1,[ZH_FWD_OUTPUT(testab.mat,3)],)
AT_CHECK(AT_PACKAGE_NAME -f junk.mat,1,[ZH_FWD_OUTPUT(junk.mat,2)],)
AT_CHECK(AT_PACKAGE_NAME -f, 1, ZH_HELP_LONG, AT_PACKAGE_NAME[: option requires an argument -- 'f'
],)
AT_CHECK(AT_PACKAGE_NAME -f testab.mat,1,[ZH_FWD_OUTPUT(testab.mat,3)],)
AT_CHECK(AT_PACKAGE_NAME --tol 1e-11 -f testAXB-v73.mat,0,[ZH_FWD_AXB_PASS([v73])],)
AT_CHECK(AT_PACKAGE_NAME -t 1e-11 -f testAXB-v7.mat,0,[ZH_FWD_AXB_PASS([v7])],)
AT_CHECK(AT_PACKAGE_NAME -t 1e-11 -f testAXB-v6.mat,0,[ZH_FWD_AXB_PASS([v6])],)
dnl BROKEN libmatio on ubuntu 16.04
dnl AT_CHECK(AT_PACKAGE_NAME -t 1e-11 -f testAXB-v4.mat,0,[ZH_FWD_AXB_PASS([v4])],)
AT_CHECK(AT_PACKAGE_NAME[[ --tol 5e-12 -f testAXB-v73.mat | sed 's/^\(fail.*=\).*/\1/'; test ${PIPESTATUS[0]} -eq 0]],1,[fwd: || A\B - X ||_2 == || A X - B ||_2
fail: || A\B - X ||_2 =
],)
AT_CHECK(AT_PACKAGE_NAME[[ --tol 0     -f testAXB-v73.mat | sed 's/^\(fail.*=\).*/\1/'; test ${PIPESTATUS[0]} -eq 0]],1,[fwd: || A\B - X ||_2 == || A X - B ||_2
fail: || A X - B ||_2 =
],)
AT_CLEANUP

AT_BANNER([unit tests])
AT_SETUP([netgen .vol])
AT_KEYWORDS([netgen])
AT_CHECK([readngvol test],0,ignore,)
m4_define(ZH_DATA_FILE_NETGEN,
  [AT_DATA([ngcube.vol-xxd],m4_esyscmd(gzip -c tests/ngcube.vol | xxd -p))]
  xxd -r -p ngcube.vol-xxd | gunzip -d > ngcube.vol
  gzip -k ngcube.vol
  echo -e "gibberish file\r\nyup just junk some more" > junk1.not_vol
  echo -e "mesh3d\r\nyup just junk some more" > junk2.not_vol
  echo -e "mesh3d\ndimension\n2" > junk3.not_vol
  echo -e "mesh3d\ngeomtype\n11" > junk4.not_vol
  echo -e "mesh3d\nsurfaceelements\n5" > junk5.not_vol
  echo -e "mesh3d\npoints\n5" > junk6.not_vol
  echo -e "mesh3d\nvolumeelements\n5" > junk7.not_vol
)
ZH_DATA_FILE_NETGEN
AT_CHECK([readngvol ngcube.vol],0,
[reading ngcube.vol
dimension 3
geomtype 0
12 surfaceelements
6 volumeelements
8 points
],)
AT_CHECK([readngvol ngcube.vol.gz],0,
[reading ngcube.vol.gz
dimension 3
geomtype 0
12 surfaceelements
6 volumeelements
8 points
],)
AT_CHECK([readngvol nofile.vol],1,[],
[error: failed to open nofile.vol
error: failed to load nofile.vol
])
AT_CHECK([readngvol junk1.not_vol],1,
[reading junk1.not_vol
],
[err: bad header
error: failed to load junk1.not_vol
])
AT_CHECK([readngvol junk2.not_vol],2,
[reading junk2.not_vol
],
[err: junk2.not_vol: empty mesh nodes = 0, elems = 0, surfs = 0
error: failed to load junk2.not_vol
])
AT_CHECK([readngvol junk3.not_vol],1,
[reading junk3.not_vol
],
[err: bad dimension
error: failed to load junk3.not_vol
])
AT_CHECK([readngvol junk4.not_vol],1,
[reading junk4.not_vol
],
[err: bad geomtype
error: failed to load junk4.not_vol
])
AT_CHECK([readngvol junk5.not_vol],1,
[reading junk5.not_vol
5 surfaceelements
],
[err: bad surfaceelements
error: failed to load junk5.not_vol
])
AT_CHECK([readngvol junk6.not_vol],1,
[reading junk6.not_vol
5 points
],
[err: bad points
error: failed to load junk6.not_vol
])
AT_CHECK([readngvol junk7.not_vol],1,
[reading junk7.not_vol
5 volumeelements
],
[err: bad elems
error: failed to load junk7.not_vol
])
AT_CLEANUP
AT_SETUP([model - system matrix calculator])
AT_KEYWORDS([mesh])
AT_CHECK([model],0,ignore,[[[  PASSED  ] 16 test(s).
]])
AT_CLEANUP
