AT_INIT()
AT_COPYRIGHT([Copyright 2016-2017, Alistair Boyle, 3-clause BSD License])
AT_COLOR_TESTS

AT_TESTED(AT_PACKAGE_NAME)
m4_define(ZH_DATA_FILE_TESTA_MAT,
  [AT_DATA([testa.mat-xxd],m4_esyscmd(xxd -p tests/testa.mat))]
  xxd -r -p testa.mat-xxd > testa.mat
dnl  diff testa.mat ../../../tests/testa.mat
)
m4_define(ZH_DATA_FILE_TESTB_MAT,
  [AT_DATA([testb.mat-xxd],m4_esyscmd(xxd -p tests/testb.mat))]
  xxd -r -p testb.mat-xxd > testb.mat
dnl  diff testb.mat ../../../tests/testb.mat
)
m4_define(ZH_DATA_FILE_TESTAB_MAT,
  [AT_DATA([testab.mat-xxd],m4_esyscmd(xxd -p tests/testab.mat))]
  xxd -r -p testab.mat-xxd > testab.mat
dnl  diff testab.mat ../../../tests/testab.mat
)
m4_define(ZH_DATA_FILE_MATA,[      Name: a
      Rank: 2
Dimensions: 2 x 3
Class Type: Double Precision Array
 Data Type: IEEE 754 double-precision
{
1 2 3
4 5 6
}])
m4_define(ZH_DATA_FILE_MATB,[      Name: b
      Rank: 2
Dimensions: 2 x 3
Class Type: Sparse Array
 Data Type: IEEE 754 double-precision
{
    (1,1)  1
    (1,2)  2
    (2,2)  5
}])

m4_define(ZH_DATA_FILE_TESTAXB_MAT,
  [AT_DATA([testAXB-v73.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v73.mat))]
  [AT_DATA([testAXB-v7.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v7.mat))]
  [AT_DATA([testAXB-v6.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v6.mat))]
  [AT_DATA([testAXB-v4.mat-xxd],m4_esyscmd(xxd -p tests/testAXB-v4.mat))]
  xxd -r -p testAXB-v73.mat-xxd >testAXB-v73.mat
  xxd -r -p testAXB-v7.mat-xxd > testAXB-v7.mat
  xxd -r -p testAXB-v6.mat-xxd > testAXB-v6.mat
  xxd -r -p testAXB-v4.mat-xxd > testAXB-v4.mat
)

m4_define(ZH_HELP_SHORT, [AT_PACKAGE_NAME @<:@options@:>@])
m4_define(ZH_HELP_LONG,
[ZH_HELP_SHORT
 --help -h     this help
 --version -V  version info
 --forward-solver --fwd -f <file.mat>
               solves X=A\B
               with A B from file.mat
])

AT_BANNER([libs])
AT_SETUP([cblas])
AT_KEYWORDS([cblas libs])
AT_CHECK([libcblas_dgemm],0,ignore)
AT_CLEANUP

AT_SETUP([lapacke])
AT_KEYWORDS([lapacke libs])
AT_CHECK([liblapacke_dgels],0,ignore)
AT_CLEANUP

AT_SETUP([umfpack])
AT_KEYWORDS([umfpack libs])
AT_CHECK([libumfpack],0,ignore)
AT_CLEANUP

AT_SETUP([matio])
AT_KEYWORDS([matio libs])

dnl TODO we *should* be able to reproduce the matlab .mat exactly but it
dnl currently comes out differently... so we just check that the output is
dnl stable and we didn't lose any data
ZH_DATA_FILE_TESTA_MAT
AT_CHECK([libmatio testa.mat out.mat | sed 's/ $//'],0,[hello]
ZH_DATA_FILE_MATA
goodbye
)
AT_CHECK([libmatio out.mat out2.mat | sed 's/ $//' && diff out.mat out2.mat],0,[hello]
ZH_DATA_FILE_MATA
goodbye
)

ZH_DATA_FILE_TESTB_MAT
AT_CHECK([libmatio testb.mat out.mat | sed 's/ $//'],0,[hello]
ZH_DATA_FILE_MATB
goodbye
)
AT_CHECK([libmatio out.mat out2.mat | sed 's/ $//' && diff out.mat out2.mat],0,[hello]
ZH_DATA_FILE_MATB
goodbye
)

ZH_DATA_FILE_TESTAB_MAT
AT_CHECK([libmatio testab.mat out.mat | sed 's/ $//'],0,[hello]
ZH_DATA_FILE_MATA
ZH_DATA_FILE_MATB
goodbye
)
AT_CHECK([libmatio out.mat out2.mat | sed 's/ $//' && diff out.mat out2.mat],0,[hello]
ZH_DATA_FILE_MATA
ZH_DATA_FILE_MATB
goodbye
)
AT_CLEANUP

AT_BANNER([args])
AT_SETUP([badargs])
AT_KEYWORDS([badargs args install])
AT_CHECK(AT_PACKAGE_NAME,1,ignore,ignore)
AT_CHECK(AT_PACKAGE_NAME asdf asdf,1,ignore,ignore)
AT_CHECK(AT_PACKAGE_NAME --unhandled-arg,1,ignore,ignore)
AT_CHECK(AT_PACKAGE_NAME asdf,1,ignore,ignore) dnl test: bad config file
AT_CLEANUP

AT_SETUP([--help])
AT_KEYWORDS([help args install])
AT_CHECK(AT_PACKAGE_NAME --help,0,ZH_HELP_LONG)
AT_CHECK(AT_PACKAGE_NAME -h,0,ZH_HELP_LONG)
AT_CHECK(AT_PACKAGE_NAME -?,1,ZH_HELP_LONG)
AT_CLEANUP

AT_SETUP(--version)
AT_KEYWORDS([version args install])
AT_CHECK(AT_PACKAGE_NAME --version,,AT_PACKAGE_NAME[ ]AT_PACKAGE_VERSION[
])
AT_CHECK(AT_PACKAGE_NAME -V,,AT_PACKAGE_NAME[ ]AT_PACKAGE_VERSION[
])
AT_CLEANUP

AT_SETUP(--forward-solver)
AT_KEYWORDS([fwd args install])
m4_define(ZH_FWD_ab_PASS,[fwd A: ret = 3 (testab.mat)
fwd B: ret = 3 (testab.mat)
fwd X: ret = 3 (testab.mat)
])
m4_define(ZH_FWD_AXB_PASS,[fwd testAXB-[$1].mat
])
ZH_DATA_FILE_TESTA_MAT
ZH_DATA_FILE_TESTAB_MAT
ZH_DATA_FILE_TESTAXB_MAT
AT_CHECK(AT_PACKAGE_NAME --forward-solver testab.mat,1,[ZH_FWD_ab_PASS])
AT_CHECK(AT_PACKAGE_NAME --fwd testab.mat,1,[ZH_FWD_ab_PASS])
AT_CHECK(AT_PACKAGE_NAME -f testab.mat,1,[ZH_FWD_ab_PASS])
AT_CHECK(AT_PACKAGE_NAME -f, 1, ZH_HELP_LONG, AT_PACKAGE_NAME[: option requires an argument -- 'f'
])
AT_CHECK(AT_PACKAGE_NAME -f testab.mat,1,[ZH_FWD_ab_PASS])
AT_SKIP_IF([true])
AT_CHECK(AT_PACKAGE_NAME --tol 1e-12 -f testAXB-v73.mat,0,[ZH_FWD_AXB_PASS([v73])])
AT_CHECK(AT_PACKAGE_NAME -t 1e-12 -f testAXB-v7.mat,0,[ZH_FWD_AXB_PASS([v7])])
AT_CHECK(AT_PACKAGE_NAME -t 1e-12 -f testAXB-v6.mat,0,[ZH_FWD_AXB_PASS([v6])])
AT_CHECK(AT_PACKAGE_NAME -t 1e-12 -f testAXB-v4.mat,0,[ZH_FWD_AXB_PASS([v4])])
AT_CLEANUP
